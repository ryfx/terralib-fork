#############################################################################
# Makefile for building: libwfsclient.so.4.0.0
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Fri Jun 10 15:15:50 2011
# Project:  wfsclient.pro
# Template: lib
# Command: $(QMAKE) "MAKEFILE=Makefile.Debug" "TE_PROJECT_TYPE=DEBUG" -o Makefile.Debug wfsclient.pro
#############################################################################

####### Compiler, tools and options

CC       = gcc
CXX      = g++
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -g -Wall -W -O0 -D_REENTRANT -fPIC  -D_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
CXXFLAGS = -pipe -g -Wall -W -O0 -D_REENTRANT -fPIC  -D_DEBUG -DQT_THREAD_SUPPORT -DQT_SHARED -DQT_TABLET_SUPPORT -DQT_NO_DEBUG
LEXFLAGS = 
YACCFLAGS= -d
INCPATH  = -I/usr/share/qt3/mkspecs/default -I. -I../../src/terralib/kernel -I. -I../../terraViewPlugins/base -I../../terraView -I../../terraView/ui -I../../ui/terraView -I../../ui/appUtils -I../../src/libspl -I../../src/terralib/kernel -I../../src/terralib/functions -I../../src/terralib/drivers/qt -I../../src/terralib/drivers/spl -I../../src/appUtils -I../../ui -I../../terraView/linux/ui -Iinclude -I../../../terraogc/src -I/usr/include/qt3 -Isrc/ui/ -Iui -Isrc/moc/
LINK     = g++
LFLAGS   = -shared -Wl,-soname,libwfsclient.so.4
LIBS     = $(SUBLIBS) -L/usr/share/qt3/lib -L/usr/X11R6/lib -L../../Debug/linux-g++ -L../../terralibx/Debug -lterralib -lte_apputils -lte_spl -lterraViewCore -lspl -L../../../terraogc/Debug/linux-g++ -lgd -lxerces-c -lcurl -lterraogccommon -lterraogcxml -lterraogcows -lterraogcowsclient -lterraogcowstheme -lterraogcwfs -lterraogcwfsclient -lterraogcwfstheme -lterraogcxsd -lterraogcfilter -lterraogcxacml -lqt-mt -lXext -lX11 -lm -lpthread
AR       = ar cqs
RANLIB   = 
MOC      = /usr/share/qt3/bin/moc
UIC      = /usr/share/qt3/bin/uic
QMAKE    = qmake
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJECTS_DIR = ../Debug/linux-g++/obj/wfsclient/

####### Files

HEADERS = include/wfsplugin.h \
		include/wfsclientPluginCode.h \
		include/wfsPluginUtils.h \
		include/wfsClientTerraViewUtils.h \
		include/wfsThemeMenu.h
SOURCES = src/wfsplugin.cpp \
		src/wfsclientPluginCode.cpp \
		src/wfsPluginUtils.cpp \
		src/wfsClientTerraViewUtils.cpp \
		src/wfsThemeMenu.cpp
OBJECTS = ../Debug/linux-g++/obj/wfsclient/wfsplugin.o \
		../Debug/linux-g++/obj/wfsclient/wfsclientPluginCode.o \
		../Debug/linux-g++/obj/wfsclient/wfsPluginUtils.o \
		../Debug/linux-g++/obj/wfsclient/wfsClientTerraViewUtils.o \
		../Debug/linux-g++/obj/wfsclient/wfsThemeMenu.o \
		../Debug/linux-g++/obj/wfsclient/wfsconfig.o \
		../Debug/linux-g++/obj/wfsclient/wfsattr.o \
		../Debug/linux-g++/obj/wfsclient/wfsimport.o \
		../Debug/linux-g++/obj/wfsclient/qmake_image_collection.o
FORMS = ui/wfsconfig.ui \
		ui/wfsattr.ui \
		ui/wfsimport.ui
UICDECLS = src/ui/wfsconfig.h \
		src/ui/wfsattr.h \
		src/ui/wfsimport.h
UICIMPLS = src/ui/wfsconfig.cpp \
		src/ui/wfsattr.cpp \
		src/ui/wfsimport.cpp
SRCMOC   = src/moc/moc_wfsplugin.cpp \
		src/moc/moc_wfsThemeMenu.cpp \
		src/moc/moc_wfsconfig.cpp \
		src/moc/moc_wfsattr.cpp \
		src/moc/moc_wfsimport.cpp
OBJMOC = ../Debug/linux-g++/obj/wfsclient/moc_wfsplugin.o \
		../Debug/linux-g++/obj/wfsclient/moc_wfsThemeMenu.o \
		../Debug/linux-g++/obj/wfsclient/moc_wfsconfig.o \
		../Debug/linux-g++/obj/wfsclient/moc_wfsattr.o \
		../Debug/linux-g++/obj/wfsclient/moc_wfsimport.o
DIST	   = ../../build/qt/config.pri \
		../base/base.pro \
		wfsclient.pro
QMAKE_TARGET = wfsclient
DESTDIR  = ../Debug/linux-g++/
TARGET   = libwfsclient.so.4.0.0
TARGETA	= ../Debug/linux-g++/libwfsclient.a
TARGETD	= libwfsclient.so.4.0.0
TARGET0	= libwfsclient.so
TARGET1	= libwfsclient.so.4
TARGET2	= libwfsclient.so.4.0

first: all
####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

all: Makefile.Debug  ../Debug/linux-g++/$(TARGET)

../Debug/linux-g++/$(TARGET):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(SUBLIBS) $(OBJCOMP)  
	test -d ../Debug/linux-g++/ || mkdir -p ../Debug/linux-g++/
	-$(DEL_FILE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS) $(OBJCOMP)
	-ln -s $(TARGET) $(TARGET0)
	-ln -s $(TARGET) $(TARGET1)
	-ln -s $(TARGET) $(TARGET2)
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET)
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET0)
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET1)
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET2)
	-$(MOVE) $(TARGET) $(TARGET0) $(TARGET1) $(TARGET2) ../Debug/linux-g++/



staticlib: $(TARGETA)

$(TARGETA):  $(UICDECLS) $(OBJECTS) $(OBJMOC) $(OBJCOMP)
	-$(DEL_FILE) $(TARGETA) 
	$(AR) $(TARGETA) $(OBJECTS) $(OBJMOC)

mocables: $(SRCMOC)
uicables: $(UICDECLS) $(UICIMPLS)

$(MOC): 
	( cd $(QTDIR)/src/moc && $(MAKE) )

Makefile.Debug: wfsclient.pro  /usr/share/qt3/mkspecs/default/qmake.conf ../../build/qt/config.pri \
		../base/base.pro \
		/usr/share/qt3/lib/libqt-mt.prl
	$(QMAKE) "MAKEFILE=Makefile.Debug" "TE_PROJECT_TYPE=DEBUG" -o Makefile.Debug wfsclient.pro
qmake: 
	@$(QMAKE) "MAKEFILE=Makefile.Debug" "TE_PROJECT_TYPE=DEBUG" -o Makefile.Debug wfsclient.pro

dist: 
	@mkdir -p ../Debug/linux-g++/obj/wfsclient/wfsclient && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) ../Debug/linux-g++/obj/wfsclient/wfsclient/ && $(COPY_FILE) --parents wfsclient_pt.ts wfsclient_sp.ts ../Debug/linux-g++/obj/wfsclient/wfsclient/ && $(COPY_FILE) --parents ./images/wmsTheme.xpm ../Debug/linux-g++/obj/wfsclient/wfsclient/ && $(COPY_FILE) --parents ui/wfsconfig.ui.h ui/wfsattr.ui.h ui/wfsimport.ui.h ../Debug/linux-g++/obj/wfsclient/wfsclient/ && ( cd `dirname ../Debug/linux-g++/obj/wfsclient/wfsclient` && $(TAR) wfsclient.tar wfsclient && $(GZIP) wfsclient.tar ) && $(MOVE) `dirname ../Debug/linux-g++/obj/wfsclient/wfsclient`/wfsclient.tar.gz . && $(DEL_FILE) -r ../Debug/linux-g++/obj/wfsclient/wfsclient

mocclean:
	-$(DEL_FILE) $(OBJMOC)
	-$(DEL_FILE) $(SRCMOC)

uiclean:
	-$(DEL_FILE) $(UICIMPLS) $(UICDECLS)

yaccclean:
lexclean:
clean: mocclean uiclean
	-$(DEL_FILE) $(OBJECTS)
		-$(DEL_FILE) src/ui/qmake_image_collection.cpp
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET) $(TARGET)
	-$(DEL_FILE) ../Debug/linux-g++/$(TARGET0) ../Debug/linux-g++/$(TARGET1) ../Debug/linux-g++/$(TARGET2) $(TARGETA)


FORCE:

####### Compile

../Debug/linux-g++/obj/wfsclient/wfsplugin.o: src/wfsplugin.cpp src/ui/wfsconfig.h \
		images/wmsTheme.xpm
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsplugin.o src/wfsplugin.cpp

../Debug/linux-g++/obj/wfsclient/wfsclientPluginCode.o: src/wfsclientPluginCode.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsclientPluginCode.o src/wfsclientPluginCode.cpp

../Debug/linux-g++/obj/wfsclient/wfsPluginUtils.o: src/wfsPluginUtils.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsPluginUtils.o src/wfsPluginUtils.cpp

../Debug/linux-g++/obj/wfsclient/wfsClientTerraViewUtils.o: src/wfsClientTerraViewUtils.cpp src/ui/wfsattr.h \
		images/wmsTheme.xpm
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsClientTerraViewUtils.o src/wfsClientTerraViewUtils.cpp

../Debug/linux-g++/obj/wfsclient/wfsThemeMenu.o: src/wfsThemeMenu.cpp src/ui/wfsimport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsThemeMenu.o src/wfsThemeMenu.cpp

src/ui/wfsconfig.h: ui/wfsconfig.ui 
	$(UIC) ui/wfsconfig.ui -o src/ui/wfsconfig.h

src/ui/wfsconfig.cpp: src/ui/wfsconfig.h ui/wfsconfig.ui ui/wfsconfig.ui.h 
	$(UIC) ui/wfsconfig.ui -i wfsconfig.h -o src/ui/wfsconfig.cpp

src/ui/wfsattr.h: ui/wfsattr.ui 
	$(UIC) ui/wfsattr.ui -o src/ui/wfsattr.h

src/ui/wfsattr.cpp: src/ui/wfsattr.h ui/wfsattr.ui ui/wfsattr.ui.h 
	$(UIC) ui/wfsattr.ui -i wfsattr.h -o src/ui/wfsattr.cpp

src/ui/wfsimport.h: ui/wfsimport.ui 
	$(UIC) ui/wfsimport.ui -o src/ui/wfsimport.h

src/ui/wfsimport.cpp: src/ui/wfsimport.h ui/wfsimport.ui ui/wfsimport.ui.h 
	$(UIC) ui/wfsimport.ui -i wfsimport.h -o src/ui/wfsimport.cpp

../Debug/linux-g++/obj/wfsclient/wfsconfig.o: src/ui/wfsconfig.cpp ui/wfsconfig.ui.h \
		src/ui/wfsconfig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsconfig.o src/ui/wfsconfig.cpp

../Debug/linux-g++/obj/wfsclient/wfsattr.o: src/ui/wfsattr.cpp ui/wfsattr.ui.h \
		src/ui/wfsattr.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsattr.o src/ui/wfsattr.cpp

../Debug/linux-g++/obj/wfsclient/wfsimport.o: src/ui/wfsimport.cpp ui/wfsimport.ui.h \
		src/ui/wfsimport.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/wfsimport.o src/ui/wfsimport.cpp

../Debug/linux-g++/obj/wfsclient/moc_wfsplugin.o: src/moc/moc_wfsplugin.cpp  include/wfsplugin.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/moc_wfsplugin.o src/moc/moc_wfsplugin.cpp

../Debug/linux-g++/obj/wfsclient/moc_wfsThemeMenu.o: src/moc/moc_wfsThemeMenu.cpp  include/wfsThemeMenu.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/moc_wfsThemeMenu.o src/moc/moc_wfsThemeMenu.cpp

../Debug/linux-g++/obj/wfsclient/moc_wfsconfig.o: src/moc/moc_wfsconfig.cpp  src/ui/wfsconfig.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/moc_wfsconfig.o src/moc/moc_wfsconfig.cpp

../Debug/linux-g++/obj/wfsclient/moc_wfsattr.o: src/moc/moc_wfsattr.cpp  src/ui/wfsattr.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/moc_wfsattr.o src/moc/moc_wfsattr.cpp

../Debug/linux-g++/obj/wfsclient/moc_wfsimport.o: src/moc/moc_wfsimport.cpp  src/ui/wfsimport.h 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/moc_wfsimport.o src/moc/moc_wfsimport.cpp

src/moc/moc_wfsplugin.cpp: $(MOC) include/wfsplugin.h
	$(MOC) include/wfsplugin.h -o src/moc/moc_wfsplugin.cpp

src/moc/moc_wfsThemeMenu.cpp: $(MOC) include/wfsThemeMenu.h
	$(MOC) include/wfsThemeMenu.h -o src/moc/moc_wfsThemeMenu.cpp

src/moc/moc_wfsconfig.cpp: $(MOC) src/ui/wfsconfig.h
	$(MOC) src/ui/wfsconfig.h -o src/moc/moc_wfsconfig.cpp

src/moc/moc_wfsattr.cpp: $(MOC) src/ui/wfsattr.h
	$(MOC) src/ui/wfsattr.h -o src/moc/moc_wfsattr.cpp

src/moc/moc_wfsimport.cpp: $(MOC) src/ui/wfsimport.h
	$(MOC) src/ui/wfsimport.h -o src/moc/moc_wfsimport.cpp

../Debug/linux-g++/obj/wfsclient/qmake_image_collection.o: src/ui/qmake_image_collection.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ../Debug/linux-g++/obj/wfsclient/qmake_image_collection.o src/ui/qmake_image_collection.cpp

src/ui/qmake_image_collection.cpp: images/wmsTheme.xpm
	$(UIC)  -embed wfsclient images/wmsTheme.xpm -o src/ui/qmake_image_collection.cpp

####### Install

install_trans: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/" || $(MKDIR) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/"
	-$(INSTALL_FILE) "wfsclient_pt.qm" "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/"


uninstall_trans: 
	-$(DEL_FILE) -r "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/wfsclient_pt.qm"
	-$(DEL_DIR) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/"


install_target: all 
	@$(CHK_DIR_EXISTS) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/" || $(MKDIR) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/"
	-$(INSTALL_FILE) "../Debug/linux-g++/$(TARGET)" "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET0)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET1)"
	-$(SYMLINK) "$(TARGET)" "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET2)"

uninstall_target: 
	-$(DEL_FILE) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET)"
	-$(DEL_FILE) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET0)"
	-$(DEL_FILE) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET1)"
	-$(DEL_FILE) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/$(TARGET2)"
	-$(DEL_DIR) "$(INSTALL_ROOT)../../Debug/linux-g++/plugins/"


install: install_trans install_target  

uninstall: uninstall_trans uninstall_target  

